{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","_Users_cutie_24points_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_cutie_24points_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_cutie_24points_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","time","started","numbers","cards","solution","cardsAdded","points","ended","onGameEnd","bind","_Users_cutie_24points_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","generateCards","addToSolution","checkResult","restart","_this2","setInterval","setState","sign","i","ranNumber","Math","floor","random","ranSign","push","String","console","log","number","includes","eval","join","alert","e","SyntaxError","_this3","react__WEBPACK_IMPORTED_MODULE_6___default","className","onClick","style","marginBottom","cursor","width","height","src","margin","fontSize","length","pop","React","Component"],"mappings":"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","file":"static/js/main.8296c666.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n\n   this.state = { \n     time: 180,\n     started: false,\n     numbers: [],\n     cards: [],\n     solution: [],\n     cardsAdded: [],\n     points: 0,\n     ended: false\n    }\n\n   this.onGameEnd = this.onGameEnd.bind(this)\n   this.generateCards = this.generateCards.bind(this)\n   this.addToSolution = this.addToSolution.bind(this)\n   this.checkResult = this.checkResult.bind(this)\n   this.restart = this.restart.bind(this)\n  }\n\n  componentDidMount(){\n    setInterval(() => {\n      if(this.state.time > 0 && this.state.started===true) this.setState({time: this.state.time-1}, () => {\n        if(this.state.time === 0){\n          this.onGameEnd()      \n        }\n      })\n    }, 1000)\n    \n  }\n\n  onGameEnd() {\n    this.setState({ended: true})\n  }\n\n  //avoid generating two same cards\n  generateCards() {\n    let cards = []\n    let numbers = []\n    let sign = ['C', 'D', 'H', 'S']\n    for (let i=0; i<4; i++) {\n      let ranNumber = Math.floor(Math.random()*13)+1\n      let ranSign = Math.floor(Math.random()*4)\n      numbers.push(ranNumber)\n      cards.push(String(ranNumber)+sign[ranSign])\n    }\n\n    this.setState({cards, numbers})\n \n    console.log(cards)\n  }\n\n  addToSolution(number) {\n    if(!this.state.cardsAdded.includes(this.state.cards[number])){\n      let solution = this.state.solution\n      let cardsAdded = this.state.cardsAdded\n      solution.push(String(this.state.numbers[number]))\n      cardsAdded.push(this.state.cards[number])\n\n      console.log(solution)\n      this.setState({solution})\n    }\n    \n  }\n\n  checkResult() {\n    try {\n      if(eval(\"(\"+this.state.solution.join('')+\")\") == 24) {\n        this.setState({points: this.state.points+100, cardsAdded: [], solution: []})\n        this.generateCards()\n      } else {\n        alert(\"Incorrect!\")\n      }\n    } catch (e) {\n      if (e instanceof SyntaxError) {\n        alert(\"Invalid Equation!\");\n      }\n    }\n  }\n\n  restart(){\n    this.setState({points: 0, cardsAdded: [], solution: [], ended: false, time: 180})\n    this.generateCards()\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n        {!this.state.ended ?\n          <div>\n          {this.state.started ?\n            <div>\n              <p>Time left: {this.state.time}</p>\n              <p>Points: {this.state.points}</p>\n              <div style={{marginBottom: 10}}>\n                <button onClick={() => {this.setState({cardsAdded: [], solution: []}); this.generateCards()}}>Refresh</button>\n              </div>\n              <img onClick={() => this.addToSolution(0)} style={{cursor: 'pointer', width:138, height:212}} src={'./img/'+this.state.cards[0]+'.png'} />\n              <img onClick={() => this.addToSolution(1)} style={{cursor: 'pointer', width:138, height:212}} src={'./img/'+this.state.cards[1]+'.png'} />\n              <img onClick={() => this.addToSolution(2)} style={{cursor: 'pointer', width:138, height:212}} src={'./img/'+this.state.cards[2]+'.png'} />\n              <img onClick={() => this.addToSolution(3)} style={{cursor: 'pointer', width:138, height:212}} src={'./img/'+this.state.cards[3]+'.png'} />\n            \n              <div>\n                <span onClick={() => { let solution = this.state.solution; solution.push('+'); this.setState({solution});}} style={{cursor: 'pointer', margin: 10, fontSize: 54}}>+</span>\n                <span onClick={() => { let solution = this.state.solution; solution.push('-'); this.setState({solution});}} style={{cursor: 'pointer', margin: 10, fontSize: 54}}>-</span>\n                <span onClick={() => { let solution = this.state.solution; solution.push('*'); this.setState({solution});}} style={{cursor: 'pointer', margin: 10, fontSize: 54}}>×</span>\n                <span onClick={() => { let solution = this.state.solution; solution.push('/'); this.setState({solution});}} style={{cursor: 'pointer', margin: 10, fontSize: 54}}>÷</span>\n                <span onClick={() => { let solution = this.state.solution; solution.push('('); this.setState({solution});}} style={{cursor: 'pointer', margin: 10, fontSize: 54}}>(</span>\n                <span onClick={() => { let solution = this.state.solution; solution.push(')'); this.setState({solution});}} style={{cursor: 'pointer', margin: 10, fontSize: 54}}>)</span>\n                <span onClick={() => { let cardsAdded = this.state.cardsAdded; if (this.state.solution[this.state.solution.length-1].match(/\\d/)) cardsAdded.pop(); this.setState({cardsAdded}); let solution = this.state.solution; solution.pop(); this.setState({solution});}} style={{cursor: 'pointer', margin: 10, fontSize: 54}}>Del</span>\n              </div>\n\n              <div>\n                <p>Solution:</p>\n                <p>{this.state.solution.join(' ')}</p>\n              </div>\n\n              <div>\n                <button onClick={this.checkResult}>Check</button>\n              </div>\n            </div>\n            :\n            <div>\n              <button onClick={() => {this.setState({started: true}); this.generateCards()}}>Play</button>\n            </div>\n          }\n          </div> \n          :\n          <div>\n            <p>Times Up!</p>\n            <p>Your score: {this.state.points}!</p>\n            <button onClick={this.restart}>Restart</button>\n          </div>\n        }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}